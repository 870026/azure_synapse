{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "idwdemoworkspace"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"LS_IDWAzureBlobConns_001_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_IDWAzureBlobConns_001'"
		},
		"LS_IDW_ADLS_001_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_IDW_ADLS_001'"
		},
		"LS_IDW_AZURESYNAPSE_001_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_IDW_AZURESYNAPSE_001'"
		},
		"LS_xxx_001_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_xxx_001'"
		},
		"idwdemoworkspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'idwdemoworkspace-WorkspaceDefaultSqlServer'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"idwdemoworkspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://idwadlsstorage.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/BulkCopyfromDB_with_ControlTable')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Copy huge amount of data in bulk from database using external control table to store source table list with partitions for each table.\n\nWhen you want to migrate data from your Azure Synapse Analytics like Oracle server, Netezza server, Teradata server or SQL Server to Azure, you have to load huge amount of data from multiple tables in data sources. In most cases, data has to be further partitioned in each table so that you can load rows with multiple threads in parallel from single table.",
				"activities": [
					{
						"name": "GetPartitionList",
						"description": "Lookup activity to retrieve the list of partitions stored in the external control table.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select @{pipeline().parameters.Control_Table_Schema_PartitionID} as PartitionID, @{pipeline().parameters.Control_Table_Schema_SourceTableName} as SourceTableName, @{pipeline().parameters.Control_Table_Schema_FilterQuery} as FilterQuery from @{pipeline().parameters.Control_Table_Name}",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseExternal_ControlTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.Control_Table_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachPartition",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetPartitionList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetPartitionList').output.value",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "CopyOnePartition",
									"description": "Copy activity to copy each partition from source database store to destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "@item().FilterQuery",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "AzureSqlDatabaseDataSource",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DataDestination",
											"type": "DatasetReference",
											"parameters": {
												"Data_Destination_Container": {
													"value": "@pipeline().parameters.Data_Destination_Container",
													"type": "Expression"
												},
												"Data_Destination_Directory": {
													"value": "@pipeline().parameters.Data_Destination_Directory",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"Control_Table_Name": {
						"type": "String"
					},
					"Control_Table_Schema_PartitionID": {
						"type": "String"
					},
					"Control_Table_Schema_SourceTableName": {
						"type": "String"
					},
					"Control_Table_Schema_FilterQuery": {
						"type": "String"
					},
					"Data_Destination_Container": {
						"type": "String"
					},
					"Data_Destination_Directory": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/AzureSqlDatabaseExternal_ControlTable')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSqlDatabaseDataSource')]",
				"[concat(variables('workspaceId'), '/datasets/DataDestination')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_ItemStorageCondition_ProductData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DF_ItemStorageCondition_ProductData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ItemStorageCondition_ProductData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MARA": {},
									"ItemStorageCondition": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "dif"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DF_ItemStorageCondition_ProductData')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Item_ProductData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DF_Item_ProductData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Item_ProductData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MARA": {},
									"MAKT": {},
									"T134": {},
									"T6WP4": {},
									"T006": {},
									"T142": {},
									"T6WP3": {},
									"Item": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "dif"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DF_Item_ProductData')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_RelatedItem_ProductData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DF_RelatedItem_ProductData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_RelatedItem_ProductData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MARA": {},
									"RelatedItem": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "dif"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DF_RelatedItem_ProductData')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabaseDataSource')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Connection to your data source store.",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "rfgs"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabaseExternal_ControlTable')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "The external control table is used to store the partition list of data source tables.",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "MATNR",
						"type": "varchar"
					},
					{
						"name": "SPRAS",
						"type": "varchar"
					},
					{
						"name": "MAKTX",
						"type": "varchar"
					},
					{
						"name": "MAKTG",
						"type": "varchar"
					},
					{
						"name": "MTART",
						"type": "varchar"
					},
					{
						"name": "NORMT",
						"type": "varchar"
					},
					{
						"name": "GEWEI",
						"type": "varchar"
					},
					{
						"name": "VOLUM",
						"type": "decimal",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "VOLEH",
						"type": "varchar"
					},
					{
						"name": "RAUBE",
						"type": "varchar"
					},
					{
						"name": "ETIFO",
						"type": "varchar"
					},
					{
						"name": "EAN11",
						"type": "varchar"
					},
					{
						"name": "LAENG",
						"type": "decimal",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "BREIT",
						"type": "decimal",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "HOEHE",
						"type": "decimal",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "MEABM",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Item"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsTable2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "rrt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dggg",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DataDestination')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Connection to your data destination store.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Data_Destination_Container": {
						"type": "String"
					},
					"Data_Destination_Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@{dataset().Data_Destination_Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Data_Destination_Container}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Item')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ItemSku",
						"type": "NVARCHAR"
					},
					{
						"name": "ItemName",
						"type": "NVARCHAR"
					},
					{
						"name": "ItemDescription",
						"type": "NVARCHAR"
					},
					{
						"name": "InformationLabelText",
						"type": "NVARCHAR"
					},
					{
						"name": "DescriptiveLabelText",
						"type": "NVARCHAR"
					},
					{
						"name": "WarningInformationText",
						"type": "NVARCHAR"
					},
					{
						"name": "GradeLabelText",
						"type": "NVARCHAR"
					},
					{
						"name": "UniversalProductCode",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "EuropeanArticleNumber",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "GlobalTradeItemNumber",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ItemElectronicProductCode",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ComponentPartIdentifier",
						"type": "NVARCHAR"
					},
					{
						"name": "PluCode",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "EngineeringReferenceNumber",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "CopyrightNumber",
						"type": "NVARCHAR"
					},
					{
						"name": "UlControlNumber",
						"type": "NVARCHAR"
					},
					{
						"name": "UlFileNumber",
						"type": "NVARCHAR"
					},
					{
						"name": "ItemNote",
						"type": "NVARCHAR"
					},
					{
						"name": "ProductId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "AssetIndicator",
						"type": "BIT"
					},
					{
						"name": "ItemLength",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "ItemWidth",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "ItemHeight",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "LwhUomId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "ItemVolume",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "ItemVolumeUomId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "ItemWeight",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "WeightUomId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "ShelfLifeDays",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "MinimumStorageTemperature",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "MinimumStorageTemperatureUomId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "MaximumStorageTemperature",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "MaximumStorageTemperatureUomId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "MinimumStorageHumidity",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "MinimumStorageHumidityUomId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "MaximumStorageHumidity",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "MaximumStorageHumidityUomId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "StandardQuantityUnitOfMeasureId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "StandardCost",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ListPrice",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "StandardWholesalePrice",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TargetReturnPrice",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "MarginAmount",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "VerbalBidsRequiredForMinimumAmountRange",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "VerbalBidsRequiredForMaximumAmountRange",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "WrittenBidsRequiredForMinimumAmountRange",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "WrittenBidsRequiredForMaximumAmountRange",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "CompetitiveBidsRequiredForMinimumAmountRange",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "CompetitiveBidsRequiredForMaximumAmountRange",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LotSizeQuantity",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "MinimumOrderQuantity",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "MinimumStockQuantity",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ActiveItemInventoryPeriodNumberOfDays",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "PutAwayRulesStatement",
						"type": "NVARCHAR"
					},
					{
						"name": "EurobrandIndicator",
						"type": "BIT"
					},
					{
						"name": "StoreMixedIndicator",
						"type": "BIT"
					},
					{
						"name": "StoreToExistingItemIndicator",
						"type": "BIT"
					},
					{
						"name": "StoreToExistingLotIndicator",
						"type": "BIT"
					},
					{
						"name": "SoleSourceItemIndicator",
						"type": "BIT"
					},
					{
						"name": "SoleSourceSupplierName",
						"type": "NVARCHAR"
					},
					{
						"name": "LifedItemIndicator",
						"type": "BIT"
					},
					{
						"name": "InStockOutOfStockIndicator",
						"type": "BIT"
					},
					{
						"name": "HazardousMaterialIndicator",
						"type": "BIT"
					},
					{
						"name": "ActiveInventoryItemIndicator",
						"type": "BIT"
					},
					{
						"name": "EligibleForExportIndicator",
						"type": "BIT"
					},
					{
						"name": "CoManagedInventoryItemIndicator",
						"type": "BIT"
					},
					{
						"name": "RotableItemIndicator",
						"type": "BIT"
					},
					{
						"name": "ConsignmentItemIndicator",
						"type": "BIT"
					},
					{
						"name": "SerializedItemIndicator",
						"type": "BIT"
					},
					{
						"name": "TrackSerialNumberIndicator",
						"type": "BIT"
					},
					{
						"name": "RepairableItemIndicator",
						"type": "BIT"
					},
					{
						"name": "RepairPeriod",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ItemIdentificationMethodId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "CommodityTypeId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "ItemSafetyClassificationId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "StandardStorageUnitTypeId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "SecurityLevelId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "VendorId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "FamilyGroupId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "HazardSeverityCategoryId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "DepreciationMethodId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "BarCodeId",
						"type": "INT",
						"precision": 10
					},
					{
						"name": "ItemTypeId",
						"type": "INT",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Item",
					"firstRowAsHeader": false
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ItemStorageCondition')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ItemSku",
						"type": "NVARCHAR"
					},
					{
						"name": "StorageConditionId",
						"type": "INT",
						"precision": 0
					},
					{
						"name": "ItemStorageConditionNote",
						"type": "NVARCHAR"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ItemStorageCondition",
					"firstRowAsHeader": false
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MAKT')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MAKT Copy.txt",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MANDT",
						"type": "String"
					},
					{
						"name": "MATNR",
						"type": "String"
					},
					{
						"name": "SPRAS",
						"type": "String"
					},
					{
						"name": "MAKTX",
						"type": "String"
					},
					{
						"name": "MAKTG",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MARA')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MARA123.csv",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MANDT",
						"type": "String"
					},
					{
						"name": "MATNR",
						"type": "String"
					},
					{
						"name": "VPSTA",
						"type": "String"
					},
					{
						"name": "PSTAT",
						"type": "String"
					},
					{
						"name": "MTART",
						"type": "decimal"
					},
					{
						"name": "MBRSH",
						"type": "String"
					},
					{
						"name": "MATKL",
						"type": "String"
					},
					{
						"name": "MEINS",
						"type": "String"
					},
					{
						"name": "BSTME",
						"type": "String"
					},
					{
						"name": "GROES",
						"type": "String"
					},
					{
						"name": "NORMT",
						"type": "String"
					},
					{
						"name": "BRGEW",
						"type": "Boolean"
					},
					{
						"name": "NTGEW",
						"type": "Boolean"
					},
					{
						"name": "GEWEI",
						"type": "String"
					},
					{
						"name": "VOLUM",
						"type": "Boolean"
					},
					{
						"name": "VOLEH",
						"type": "String"
					},
					{
						"name": "RAUBE",
						"type": "String"
					},
					{
						"name": "TEMPB",
						"type": "String"
					},
					{
						"name": "TRAGR",
						"type": "String"
					},
					{
						"name": "STOFF",
						"type": "String"
					},
					{
						"name": "ETIAR",
						"type": "String"
					},
					{
						"name": "ETIFO",
						"type": "String"
					},
					{
						"name": "EAN11",
						"type": "String"
					},
					{
						"name": "NUMTP",
						"type": "String"
					},
					{
						"name": "LAENG",
						"type": "Boolean"
					},
					{
						"name": "BREIT",
						"type": "Boolean"
					},
					{
						"name": "HOEHE",
						"type": "Boolean"
					},
					{
						"name": "MEABM",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RelatedItem')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ItemSku",
						"type": "NVARCHAR"
					},
					{
						"name": "RelatedItemSku",
						"type": "NVARCHAR"
					},
					{
						"name": "ItemRelationshipTypeId",
						"type": "INT",
						"precision": 0
					},
					{
						"name": "ItemRelationshipNote",
						"type": "NVARCHAR"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RelatedItem",
					"firstRowAsHeader": false
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/T006')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "T006.csv",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/T142')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "T142.csv",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MANDT",
						"type": "String"
					},
					{
						"name": "RAUBE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/T6WP3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "T6WP3.csv",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/T6WP4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "T6WP4.csv",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TNTP')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TNTP.csv",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sink')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "INT"
					},
					{
						"type": "INT"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/source1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "T134.csv",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MANDT",
						"type": "String"
					},
					{
						"name": "MTART",
						"type": "String"
					},
					{
						"name": "MTREF",
						"type": "String"
					},
					{
						"name": "MBREF",
						"type": "String"
					},
					{
						"name": "FLREF",
						"type": "String"
					},
					{
						"name": "NUMKI",
						"type": "integer"
					},
					{
						"name": "NUMKE",
						"type": "String"
					},
					{
						"name": "ENVOP",
						"type": "String"
					},
					{
						"name": "BSEXT",
						"type": "String"
					},
					{
						"name": "BSINT",
						"type": "String"
					},
					{
						"name": "PSTAT",
						"type": "String"
					},
					{
						"name": "KKREF",
						"type": "String"
					},
					{
						"name": "VPRSV",
						"type": "String"
					},
					{
						"name": "KZVPR",
						"type": "String"
					},
					{
						"name": "VMTPO",
						"type": "String"
					},
					{
						"name": "EKALR",
						"type": "String"
					},
					{
						"name": "KZGRP",
						"type": "String"
					},
					{
						"name": "KZKFG",
						"type": "String"
					},
					{
						"name": "BEGRU",
						"type": "String"
					},
					{
						"name": "KZPRC",
						"type": "String"
					},
					{
						"name": "KZPIP",
						"type": "String"
					},
					{
						"name": "PRDRU",
						"type": "String"
					},
					{
						"name": "ARANZ",
						"type": "String"
					},
					{
						"name": "WMAKG",
						"type": "String"
					},
					{
						"name": "IZUST",
						"type": "String"
					},
					{
						"name": "ARDEL",
						"type": "String"
					},
					{
						"name": "KZMPN",
						"type": "String"
					},
					{
						"name": "MSTAE",
						"type": "String"
					},
					{
						"name": "CCHIS",
						"type": "String"
					},
					{
						"name": "CTYPE",
						"type": "String"
					},
					{
						"name": "CLASS",
						"type": "String"
					},
					{
						"name": "CHNEU",
						"type": "String"
					},
					{
						"name": "VTYPE",
						"type": "String"
					},
					{
						"name": "VNUMKI",
						"type": "String"
					},
					{
						"name": "VNUMKE",
						"type": "String"
					},
					{
						"name": "KZRAC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/src1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "source1.txt",
						"container": "dif"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "s1",
						"type": "String"
					},
					{
						"name": "s2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_IDWAzureBlobConns_001')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_IDWAzureBlobConns_001_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_IDW_ADLS_001')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_IDW_ADLS_001_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_IDW_AZURESYNAPSE_001')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_IDW_AZURESYNAPSE_001_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_xxx_001')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_xxx_001_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/idwdemoworkspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('idwdemoworkspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/idwdemoworkspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('idwdemoworkspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/linkedService1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_ItemStorageCondition_ProductData')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MARA",
								"type": "DatasetReference"
							},
							"name": "MARA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ItemStorageCondition",
								"type": "DatasetReference"
							},
							"name": "ItemStorageCondition"
						}
					],
					"transformations": [
						{
							"name": "Filter2"
						},
						{
							"name": "ExpItemStorageCondition"
						}
					],
					"script": "source(output(\n\t\tTEMPB as string,\n\t\tMATNR as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MARA\nExpItemStorageCondition filter(!isNull(TEMPB)) ~> Filter2\nMARA derive(StorageConditionId = 9999) ~> ExpItemStorageCondition\nFilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tItemSku as string,\n\t\tStorageConditionId as integer,\n\t\tItemStorageConditionNote as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tItemSku = MATNR,\n\t\tStorageConditionId,\n\t\tItemStorageConditionNote = TEMPB\n\t)) ~> ItemStorageCondition"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/MARA')]",
				"[concat(variables('workspaceId'), '/datasets/ItemStorageCondition')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_Item_ProductData')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MARA",
								"type": "DatasetReference"
							},
							"name": "MARA"
						},
						{
							"dataset": {
								"referenceName": "MAKT",
								"type": "DatasetReference"
							},
							"name": "MAKT"
						},
						{
							"dataset": {
								"referenceName": "source1",
								"type": "DatasetReference"
							},
							"name": "T134"
						},
						{
							"dataset": {
								"referenceName": "T6WP4",
								"type": "DatasetReference"
							},
							"name": "T6WP4"
						},
						{
							"dataset": {
								"referenceName": "T006",
								"type": "DatasetReference"
							},
							"name": "T006"
						},
						{
							"dataset": {
								"referenceName": "T142",
								"type": "DatasetReference"
							},
							"name": "T142"
						},
						{
							"dataset": {
								"referenceName": "T6WP3",
								"type": "DatasetReference"
							},
							"name": "T6WP3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Item",
								"type": "DatasetReference"
							},
							"name": "Item"
						}
					],
					"transformations": [
						{
							"name": "jnrMARA"
						},
						{
							"name": "Lookup2"
						}
					],
					"script": "source(output(\n\t\tMANDT as string,\n\t\tMATNR as string,\n\t\tVPSTA as string,\n\t\tPSTAT as string,\n\t\tMTART as string,\n\t\tMBRSH as string,\n\t\tMATKL as string,\n\t\tMEINS as string,\n\t\tBSTME as string,\n\t\tGROES as string,\n\t\tNORMT as string,\n\t\tBRGEW as boolean,\n\t\tNTGEW as boolean,\n\t\tGEWEI as string,\n\t\tVOLUM as boolean,\n\t\tVOLEH as string,\n\t\tRAUBE as string,\n\t\tTEMPB as string,\n\t\tTRAGR as string,\n\t\tSTOFF as string,\n\t\tETIAR as string,\n\t\tETIFO as string,\n\t\tEAN11 as string,\n\t\tNUMTP as string,\n\t\tLAENG as boolean,\n\t\tBREIT as boolean,\n\t\tHOEHE as boolean,\n\t\tMEABM as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MARA\nsource(output(\n\t\tMATNR as string,\n\t\tMAKTX as string,\n\t\tMAKTG as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MAKT\nsource(output(\n\t\tMANDT as string,\n\t\tMTART as string,\n\t\tMTREF as string,\n\t\tMBREF as string,\n\t\tFLREF as string,\n\t\tNUMKI as string,\n\t\tNUMKE as string,\n\t\tENVOP as string,\n\t\tBSEXT as string,\n\t\tBSINT as string,\n\t\tPSTAT as string,\n\t\tKKREF as string,\n\t\tVPRSV as string,\n\t\tKZVPR as string,\n\t\tVMTPO as string,\n\t\tEKALR as string,\n\t\tKZGRP as string,\n\t\tKZKFG as string,\n\t\tBEGRU as string,\n\t\tKZPRC as string,\n\t\tKZPIP as string,\n\t\tPRDRU as string,\n\t\tARANZ as string,\n\t\tWMAKG as string,\n\t\tIZUST as string,\n\t\tARDEL as string,\n\t\tKZMPN as string,\n\t\tMSTAE as string,\n\t\tCCHIS as string,\n\t\tCTYPE as string,\n\t\tCLASS as string,\n\t\tCHNEU as string,\n\t\tVTYPE as string,\n\t\tVNUMKI as string,\n\t\tVNUMKE as string,\n\t\tKZRAC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> T134\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> T6WP4\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> T006\nsource(output(\n\t\tMANDT as string,\n\t\tRAUBE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> T142\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> T6WP3\nMAKT, MARA join(MAKT@MATNR == MARA@MATNR,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> jnrMARA\njnrMARA, T142 lookup(MARA@RAUBE == T142@RAUBE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup2\nLookup2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tItemSku as string,\n\t\tItemName as string,\n\t\tItemDescription as string,\n\t\tInformationLabelText as string,\n\t\tDescriptiveLabelText as string,\n\t\tWarningInformationText as string,\n\t\tGradeLabelText as string,\n\t\tUniversalProductCode as decimal(18,2),\n\t\tEuropeanArticleNumber as decimal(18,2),\n\t\tGlobalTradeItemNumber as decimal(18,2),\n\t\tItemElectronicProductCode as decimal(18,2),\n\t\tComponentPartIdentifier as string,\n\t\tPluCode as decimal(18,2),\n\t\tEngineeringReferenceNumber as integer,\n\t\tCopyrightNumber as string,\n\t\tUlControlNumber as string,\n\t\tUlFileNumber as string,\n\t\tItemNote as string,\n\t\tProductId as integer,\n\t\tAssetIndicator as boolean,\n\t\tItemLength as integer,\n\t\tItemWidth as integer,\n\t\tItemHeight as integer,\n\t\tLwhUomId as integer,\n\t\tItemVolume as integer,\n\t\tItemVolumeUomId as integer,\n\t\tItemWeight as integer,\n\t\tWeightUomId as integer,\n\t\tShelfLifeDays as integer,\n\t\tMinimumStorageTemperature as integer,\n\t\tMinimumStorageTemperatureUomId as integer,\n\t\tMaximumStorageTemperature as integer,\n\t\tMaximumStorageTemperatureUomId as integer,\n\t\tMinimumStorageHumidity as integer,\n\t\tMinimumStorageHumidityUomId as integer,\n\t\tMaximumStorageHumidity as integer,\n\t\tMaximumStorageHumidityUomId as integer,\n\t\tStandardQuantityUnitOfMeasureId as integer,\n\t\tStandardCost as decimal(18,2),\n\t\tListPrice as decimal(18,2),\n\t\tStandardWholesalePrice as decimal(18,2),\n\t\tTargetReturnPrice as decimal(18,2),\n\t\tMarginAmount as decimal(18,2),\n\t\tVerbalBidsRequiredForMinimumAmountRange as decimal(18,2),\n\t\tVerbalBidsRequiredForMaximumAmountRange as decimal(18,2),\n\t\tWrittenBidsRequiredForMinimumAmountRange as decimal(18,2),\n\t\tWrittenBidsRequiredForMaximumAmountRange as decimal(18,2),\n\t\tCompetitiveBidsRequiredForMinimumAmountRange as decimal(18,2),\n\t\tCompetitiveBidsRequiredForMaximumAmountRange as decimal(18,2),\n\t\tLotSizeQuantity as decimal(18,2),\n\t\tMinimumOrderQuantity as decimal(18,2),\n\t\tMinimumStockQuantity as decimal(18,2),\n\t\tActiveItemInventoryPeriodNumberOfDays as integer,\n\t\tPutAwayRulesStatement as string,\n\t\tEurobrandIndicator as boolean,\n\t\tStoreMixedIndicator as boolean,\n\t\tStoreToExistingItemIndicator as boolean,\n\t\tStoreToExistingLotIndicator as boolean,\n\t\tSoleSourceItemIndicator as boolean,\n\t\tSoleSourceSupplierName as string,\n\t\tLifedItemIndicator as boolean,\n\t\tInStockOutOfStockIndicator as boolean,\n\t\tHazardousMaterialIndicator as boolean,\n\t\tActiveInventoryItemIndicator as boolean,\n\t\tEligibleForExportIndicator as boolean,\n\t\tCoManagedInventoryItemIndicator as boolean,\n\t\tRotableItemIndicator as boolean,\n\t\tConsignmentItemIndicator as boolean,\n\t\tSerializedItemIndicator as boolean,\n\t\tTrackSerialNumberIndicator as boolean,\n\t\tRepairableItemIndicator as boolean,\n\t\tRepairPeriod as decimal(18,2),\n\t\tItemIdentificationMethodId as integer,\n\t\tCommodityTypeId as integer,\n\t\tItemSafetyClassificationId as integer,\n\t\tStandardStorageUnitTypeId as integer,\n\t\tSecurityLevelId as integer,\n\t\tVendorId as integer,\n\t\tFamilyGroupId as integer,\n\t\tHazardSeverityCategoryId as integer,\n\t\tDepreciationMethodId as integer,\n\t\tBarCodeId as integer,\n\t\tItemTypeId as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tItemSku = MARA@MATNR,\n\t\tItemDescription = MAKTX,\n\t\tInformationLabelText = ETIFO,\n\t\tDescriptiveLabelText = MAKTG,\n\t\tGlobalTradeItemNumber = EAN11,\n\t\tLwhUomId = MEABM,\n\t\tItemVolumeUomId = VOLEH,\n\t\tWeightUomId = GEWEI,\n\t\tStandardStorageUnitTypeId = T142@RAUBE,\n\t\tItemTypeId = MTART\n\t)) ~> Item"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/MARA')]",
				"[concat(variables('workspaceId'), '/datasets/MAKT')]",
				"[concat(variables('workspaceId'), '/datasets/source1')]",
				"[concat(variables('workspaceId'), '/datasets/T6WP4')]",
				"[concat(variables('workspaceId'), '/datasets/T006')]",
				"[concat(variables('workspaceId'), '/datasets/T142')]",
				"[concat(variables('workspaceId'), '/datasets/T6WP3')]",
				"[concat(variables('workspaceId'), '/datasets/Item')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_RelatedItem_ProductData')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MARA",
								"type": "DatasetReference"
							},
							"name": "MARA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RelatedItem",
								"type": "DatasetReference"
							},
							"name": "RelatedItem"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "ExpRelatedItem"
						}
					],
					"script": "source(output(\n\t\tSTOFF as string,\n\t\tMATNR as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MARA\nExpRelatedItem filter(!isNull(STOFF)) ~> Filter1\nMARA derive(ItemRelationshipTypeId = 99999,\n\t\tItemRelationshipNote = 'Hazardous Material') ~> ExpRelatedItem\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tItemSku as string,\n\t\tRelatedItemSku as string,\n\t\tItemRelationshipTypeId as integer,\n\t\tItemRelationshipNote as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tItemSku = MATNR,\n\t\tRelatedItemSku = STOFF,\n\t\tItemRelationshipTypeId,\n\t\tItemRelationshipNote\n\t)) ~> RelatedItem"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/MARA')]",
				"[concat(variables('workspaceId'), '/datasets/RelatedItem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlDatabaseDataSource",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlDatabaseDataSource",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/AzureSqlDatabaseDataSource')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow2')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "src1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\ts1 as string,\n\t\ts2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\trrt as integer,\n\t\tdggg as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/src1')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSynapseAnalyticsTable2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateCredential')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE DATABASE SCOPED CREDENTIAL idwadlsstorage_Credential\nWITH\n    IDENTITY = 'idwadlsstorage' ,\n    SECRET = 'l5TVl6o6M4viMAFLv9d3Xw8/fXCsb8kv8y1NRfs1esCZj02Ar/yGp5HO4Fkra9BjHxcxNofOZ9NQe+KskIgV9w=='\n;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateDataSource')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "PolyBase"
				},
				"content": {
					"query": "CREATE EXTERNAL DATA SOURCE idwadlsstorage\nWITH\n( \n    LOCATION = 'abfss://adlsdemofilesystem@idwadlsstorage.dfs.core.windows.net' ,\n    CREDENTIAL = idwadlsstorage_Credential ,\n    TYPE = HADOOP\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateExternalTable')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "PolyBase"
				},
				"content": {
					"query": "CREATE EXTERNAL TABLE dbo.Target1Ext (\nDATA_EFFECTIVE_DATE VARCHAR(255) NULL,\nJOB_RUN_DATE VARCHAR(255) NULL,\nAPPL_MAL_CODE VARCHAR(255) NULL,\nRECORD_COUNT VARCHAR(255) NULL,\nENTITY_NAME VARCHAR(255) NULL,\nPROCESS_FLAG VARCHAR(255) NULL,\nLOAD_START_TIME VARCHAR(255) NULL,\nLOAD_END_TIME VARCHAR(255) NULL\n)\nWITH (\n    LOCATION='Target1.csv',\n    DATA_SOURCE=idwadlsstorage,\n    FILE_FORMAT=csvFile\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateFileFormat')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "PolyBase"
				},
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT csvFile\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n      FIELD_TERMINATOR = ',',\n      STRING_DELIMITER = '\"',\n      FIRST_ROW = 2,\n      USE_TYPE_DEFAULT = FALSE,\n      ENCODING = 'UTF8' )\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateTarget')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL TABLE dbo.Target1Ext (\nDATA_EFFECTIVE_DATE VARCHAR(255) NULL,\nJOB_RUN_DATE VARCHAR(255) NULL,\nAPPL_MAL_CODE VARCHAR(255) NULL,\nRECORD_COUNT VARCHAR(255) NULL,\nENTITY_NAME VARCHAR(255) NULL,\nPROCESS_FLAG VARCHAR(255) NULL,\nLOAD_START_TIME VARCHAR(255) NULL,\nLOAD_END_TIME VARCHAR(255) NULL\n)\nWITH (\n    LOCATION='Target1.csv',\n    DATA_SOURCE=idwadlsstorage,\n    FILE_FORMAT=csvFile\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LoadData')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "PolyBase"
				},
				"content": {
					"query": "CREATE TABLE dbo.Target1\nWITH (   \n    CLUSTERED COLUMNSTORE INDEX,\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT * FROM dbo.Target1Ext;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE dbo.Sales_Data (\"ORDERID\" NVARCHAR(255) , \"ORDERNUMBER\" NVARCHAR(255) , \"QUANTITYORDERED\" NVARCHAR(255) , \"PRICEEACH\" NVARCHAR(255) , \"ORDERLINENUMBER\" NVARCHAR(255) , \"SALES\" NVARCHAR(255) , \"ORDERDATE\" NVARCHAR(255) , \"STATUS\" NVARCHAR(255) , \"QTR_ID\" NVARCHAR(255) , \"MONTH_ID\" NVARCHAR(255) , \"YEAR_ID\" NVARCHAR(255) , \"PRODUCTLINE\" NVARCHAR(255) , \"MSRP\" NVARCHAR(255) , \"PRODUCTCODE\" NVARCHAR(255) , \"CUSTOMERNAME\" NVARCHAR(255) , \"PHONE\" NVARCHAR(255) , \"ADDRESSLINE1\" NVARCHAR(255) , \"ADDRESSLINE2\" NVARCHAR(255) , \"CITY\" NVARCHAR(255) , \"STATE\" NVARCHAR(255) , \"POSTALCODE\" NVARCHAR(255) , \"COUNTRY\" NVARCHAR(255) , \"TERRITORY\" NVARCHAR(255) , \"CONTACTLASTNAME\" NVARCHAR(255) , \"CONTACTFIRSTNAME\" NVARCHAR(255) , \"DEALSIZE\" NVARCHAR(255) ) ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * FROM dbo.Target1;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "select * from dbo.emp_tgt;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "idwdemosqlpool",
						"databaseName": "idwdemosqlpool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_data_source')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "POLYBASEInsert"
				},
				"content": {
					"query": "CREATE EXTERNAL DATA SOURCE idwadlsstoragedemo\nWITH\n( \n    LOCATION = 'abfss://adlsdemofilesystem@idwadlsstorage.dfs.core.windows.net' ,\n    CREDENTIAL = idwadlsstorage_key,\n    TYPE = HADOOP\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "idwdemosqlpool",
						"databaseName": "idwdemosqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_external_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "POLYBASEInsert"
				},
				"content": {
					"query": "CREATE EXTERNAL TABLE dbo.raboempext (\nEMPID VARCHAR(255) NULL,\nNAME VARCHAR(255) NULL,\nDEPT_ID VARCHAR(255) NULL\n)\nWITH (\n    LOCATION='raboemp.csv',\n    DATA_SOURCE=idwadlsstorage,\n    FILE_FORMAT=CSVFileFormat\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "idwdemosqlpool",
						"databaseName": "idwdemosqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_file_format')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "POLYBASEInsert"
				},
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT CSVFileFormat\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n      FIELD_TERMINATOR = ',',\n      STRING_DELIMITER = '\"',\n      FIRST_ROW = 2,\n      USE_TYPE_DEFAULT = FALSE,\n      ENCODING = 'UTF8' )\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "idwdemosqlpool",
						"databaseName": "idwdemosqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_key')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "POLYBASEInsert"
				},
				"content": {
					"query": "\nCREATE DATABASE SCOPED CREDENTIAL idwadlsstorage_key\nWITH\n    IDENTITY = 'idwadlsstorageforload' ,\n    SECRET = 'l5TVl6o6M4viMAFLv9d3Xw8/fXCsb8kv8y1NRfs1esCZj02Ar/yGp5HO4Fkra9BjHxcxNofOZ9NQe+KskIgV9w=='\n;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "idwdemosqlpool",
						"databaseName": "idwdemosqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/creatingfileCSV')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT csvFile\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n      FIELD_TERMINATOR = ',',\n      STRING_DELIMITER = '\"',\n      FIRST_ROW = 2,\n      USE_TYPE_DEFAULT = FALSE,\n      ENCODING = 'UTF8' )\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataStore')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL DATA SOURCE idwadlsstorage\nWITH\n( \n    LOCATION = 'abfss://adlsdemofilesystem@idwadlsstorage.dfs.core.windows.net' ,\n    CREDENTIAL = idwadlsstorage_Credential ,\n    TYPE = HADOOP\n);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/loadDataFinal')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE dbo.Target1\nWITH (   \n    CLUSTERED COLUMNSTORE INDEX,\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT * FROM dbo.Target1Ext;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "idwdemosqlpool",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/load_data_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "POLYBASEInsert"
				},
				"content": {
					"query": "-- INSERT INTO dbo.raboemp\n-- SELECT * FROM dbo.raboempext ext where ext.empid != raboemp.empid;\nDROP EXTERNAL TABLE dbo.raboempext;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "idwdemosqlpool",
						"databaseName": "idwdemosqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/validation')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "POLYBASEInsert"
				},
				"content": {
					"query": "--  select * from dbo.raboempext;\n-- select * from dbo.raboemp order by EMPID;\nselect * from dbo.hashraboemp order by EMPID;\n-- MERGE dbo.hashraboemp AS TARGET\n-- USING dbo.raboempext AS SOURCE\n-- ON TARGET.EMPID = SOURCE.EMPID\n-- WHEN MATCHED \n-- THEN UPDATE SET TARGET.NAME = SOURCE.NAME, TARGET.DEPT_ID = SOURCE.DEPT_ID\n-- WHEN NOT MATCHED\n-- THEN INSERT (EMPID, NAME, DEPT_ID) VALUES (SOURCE.EMPID, SOURCE.NAME, SOURCE.DEPT_ID);\n\n-- UPDATE TARGET\n-- SET \n--    TARGET.NAME = SOURCE.NAME, TARGET.DEPT_ID = SOURCE.DEPT_ID\n-- FROM dbo.hashraboemp AS TARGET\n-- INNER JOIN\n-- dbo.raboempext AS SOURCE\n-- ON TARGET.EMPID = SOURCE.EMPID;\n\n\n-- CREATE TABLE dbo.hashraboemp\n-- WITH (\n--     CLUSTERED COLUMNSTORE INDEX,\n--     DISTRIBUTION = HASH(EMPID)\n--     )\n-- AS\n-- SELECT * FROM dbo.raboemp;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "idwdemosqlpool",
						"databaseName": "idwdemosqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/manifest')]",
			"type": "Microsoft.Synapse/workspaces/sparkJobDefinitions",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"targetBigDataPool": {
					"type": "BigDataPoolReference"
				},
				"language": "python",
				"jobProperties": {
					"name": "manifest",
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					},
					"args": [],
					"jars": [],
					"files": [],
					"numExecutors": 2
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wf_load_cust_crdt_sumry')]",
			"type": "Microsoft.Synapse/workspaces/sparkJobDefinitions",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"targetBigDataPool": {
					"type": "BigDataPoolReference"
				},
				"language": "python",
				"jobProperties": {
					"name": "wf_load_cust_crdt_sumry",
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					},
					"args": [],
					"jars": [],
					"files": [],
					"numExecutors": 2
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/idwdemosqlpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		}
	]
}