{
   "name" : "DF_load_dep_party",
   "type" : "Microsoft.DataFactory/factories/dataflows",
   "apiVersion" : "2018-06-01",
   "properties" : {
      "type" : "MappingDataFlow",
      "typeProperties" : {
         "sources" : [ {
            "dataset" : {
               "referenceName" : "SQ_Dependent",
               "type" : "DatasetReference"
            },
            "name" : "Dependent"
         } ],
         "sinks" : [ {
            "dataset" : {
               "referenceName" : "Party",
               "type" : "DatasetReference"
            },
            "name" : "Party"
         }, {
            "dataset" : {
               "referenceName" : "Party",
               "type" : "DatasetReference"
            },
            "name" : "Party1"
         } ],
         "transformations" : [ {
            "name" : "EXPTRANS"
         }, {
            "name" : "RTRTRANS"
         } ],
         "script" : "\n\nsource(output(\n\t\tTitle as string,\n\t\tFirst_Name as string,\n\t\tMiddle_Name as string,\n\t\tLast_Name as string,\n\t\tMember_ID as double,\n\t\tMember_Suffix as string,\n\t\tBirth_Date as date,\n\t\tGender_Code as string,\n\t\tSocial_Security_Number as double,\n\t\tMember_Record_Number as double,\n\t\tMember_Type_Code as double,\n\t\tOriginal_Effective_Date as date,\n\t\tRelationship_to_Subscriber_Code as double,\n\t\tRelationship_to_Subscriber_Code_Label as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat:'table') ~> Dependent\nDependent derive(Title = Title,\n\t\tFirst_Name = First_Name,\n\t\tMiddle_Name = Middle_Name,\n\t\tLast_Name = Last_Name,\n\t\tMember_ID = Member_ID,\n\t\tMember_Suffix = Member_Suffix,\n\t\tBirth_Date = Birth_Date,\n\t\tGender_Code = Gender_Code,\n\t\tSocial_Security_Number = Social_Security_Number,\n\t\tMember_Record_Number = Member_Record_Number,\n\t\tMember_Type_Code = Member_Type_Code,\n\t\tOriginal_Effective_Date = Original_Effective_Date,\n\t\tRelationship_to_Subscriber_Code = Relationship_to_Subscriber_Code,\n\t\tRelationship_to_Subscriber_Code_Label = Relationship_to_Subscriber_Code_Label) ~> EXPTRANS\nEXPTRANS split(isNull(Social_Security_Number),\n\t!isNull(Social_Security_Number),\n\tdisjoint: true) ~> RTRTRANS@(CaseParty,CaseParty1)\nRTRTRANS@CaseParty sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinsertable:true,mapColumn(\n\t\tTitle = Title,\n\t\tGender = Gender_Code,\n\t\tFirst_Name = First_Name,\n\t\tMiddle_Name = Middle_Name,\n\t\tLast_Name = Last_Name,\n\t\tMember_Identifier = Member_ID,\n\t\tMember_Suffix = Member_Suffix,\n\t\tDate_of_Birth = Birth_Date,\n\t\tMember_Number = Member_Record_Number,\n\t\tSoc_Number = Social_Security_Number,\n\t\tType_Code = Member_Type_Code,\n\t\tRelationship_to_Subscriber_Code = Relationship_to_Subscriber_Code,\n\t\tRelationship_to_Subscriber_Code_Label = Relationship_to_Subscriber_Code_Label,\n\t\tEffective_Date = Original_Effective_Date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Party\nRTRTRANS@CaseParty1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinsertable:true,mapColumn(\n\t\tTitle = Title,\n\t\tGender = Gender_Code,\n\t\tFirst_Name = First_Name,\n\t\tMiddle_Name = Middle_Name,\n\t\tLast_Name = Last_Name,\n\t\tMember_Identifier = Member_ID,\n\t\tMember_Suffix = Member_Suffix,\n\t\tDate_of_Birth = Birth_Date,\n\t\tMember_Number = Member_Record_Number,\n\t\tSoc_Number = Social_Security_Number,\n\t\tType_Code = Member_Type_Code,\n\t\tRelationship_to_Subscriber_Code = Relationship_to_Subscriber_Code,\n\t\tRelationship_to_Subscriber_Code_Label = Relationship_to_Subscriber_Code_Label,\n\t\tEffective_Date = Original_Effective_Date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Party1"
      }
   },
   "dependsOn" : [ "[concat(variables('factoryId'), '/datasets/SQ_Dependent')]", "[concat(variables('factoryId'), '/datasets/Party')]", "[concat(variables('factoryId'), '/datasets/Party')]" ]
}